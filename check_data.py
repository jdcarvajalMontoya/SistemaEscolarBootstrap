#!/usr/bin/env python
import os
import django

# Configurar Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'backend.settings')
django.setup()

from core.models import Genero, EstadoCivil, Estrato, Pais, Departamento, Ciudad

def verificar_datos_referencia():
    print("üîç Verificando datos de referencia...")
    
    # Verificar g√©neros
    generos = ['Masculino', 'Femenino']
    for nombre in generos:
        genero, created = Genero.objects.get_or_create(nombre=nombre)
        if created:
            print(f"‚úÖ G√©nero creado: {nombre}")
        else:
            print(f"‚ÑπÔ∏è G√©nero ya existe: {nombre}")
    
    # Verificar estados civiles
    estados = ['Soltero/a', 'Casado/a', 'Uni√≥n Libre', 'Divorciado/a', 'Viudo/a']
    for nombre in estados:
        estado, created = EstadoCivil.objects.get_or_create(nombre=nombre)
        if created:
            print(f"‚úÖ Estado civil creado: {nombre}")
        else:
            print(f"‚ÑπÔ∏è Estado civil ya existe: {nombre}")
    
    # Verificar estratos
    estratos = ['1', '2', '3', '4', '5', '6']
    for nombre in estratos:
        estrato, created = Estrato.objects.get_or_create(nombre=nombre)
        if created:
            print(f"‚úÖ Estrato creado: {nombre}")
        else:
            print(f"‚ÑπÔ∏è Estrato ya existe: {nombre}")
    
    # Verificar pa√≠s Colombia
    colombia, created = Pais.objects.get_or_create(
        nombre='Colombia',
        defaults={'codigo_iso': 'COL'}
    )
    if created:
        print("‚úÖ Pa√≠s creado: Colombia")
    else:
        print("‚ÑπÔ∏è Pa√≠s ya existe: Colombia")
    
    # Verificar departamentos principales
    departamentos = [
        'Antioquia', 'Atl√°ntico', 'Bol√≠var', 'Boyac√°', 'Caldas',
        'Caquet√°', 'Cauca', 'Cesar', 'C√≥rdoba', 'Cundinamarca',
        'Choc√≥', 'Huila', 'La Guajira', 'Magdalena', 'Meta',
        'Nari√±o', 'Norte de Santander', 'Putumayo', 'Quind√≠o',
        'Risaralda', 'Santander', 'Sucre', 'Tolima', 'Valle del Cauca'
    ]
    
    for nombre in departamentos:
        depto, created = Departamento.objects.get_or_create(
            nombre=nombre,
            defaults={'pais': colombia}
        )
        if created:
            print(f"‚úÖ Departamento creado: {nombre}")
        else:
            print(f"‚ÑπÔ∏è Departamento ya existe: {nombre}")
    
    # Verificar ciudades principales
    ciudades_data = [
        ('Medell√≠n', 'Antioquia'),
        ('Barranquilla', 'Atl√°ntico'),
        ('Cartagena', 'Bol√≠var'),
        ('Tunja', 'Boyac√°'),
        ('Manizales', 'Caldas'),
        ('Bogot√°', 'Cundinamarca'),
        ('Cali', 'Valle del Cauca'),
        ('Bucaramanga', 'Santander'),
        ('Pereira', 'Risaralda'),
        ('Ibagu√©', 'Tolima'),
    ]
    
    for ciudad_nombre, depto_nombre in ciudades_data:
        try:
            depto = Departamento.objects.get(nombre=depto_nombre)
            ciudad, created = Ciudad.objects.get_or_create(
                nombre=ciudad_nombre,
                defaults={'departamento': depto}
            )
            if created:
                print(f"‚úÖ Ciudad creada: {ciudad_nombre}")
            else:
                print(f"‚ÑπÔ∏è Ciudad ya existe: {ciudad_nombre}")
        except Departamento.DoesNotExist:
            print(f"‚ùå Departamento {depto_nombre} no encontrado")
    
    print("\nüìä Resumen de datos:")
    print(f"G√©neros: {Genero.objects.count()}")
    print(f"Estados civiles: {EstadoCivil.objects.count()}")
    print(f"Estratos: {Estrato.objects.count()}")
    print(f"Pa√≠ses: {Pais.objects.count()}")
    print(f"Departamentos: {Departamento.objects.count()}")
    print(f"Ciudades: {Ciudad.objects.count()}")
    
    print("\n‚úÖ Verificaci√≥n completada!")

if __name__ == '__main__':
    verificar_datos_referencia() 